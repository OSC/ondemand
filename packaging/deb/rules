#!/usr/bin/make -f
# You must remove unused comment lines for the released package.
export DH_VERBOSE         = 1
export NCPUS              = 4
export DESTDIR            = $(CURDIR)/debian/ondemand
export GEM_HOME           = $(CURDIR)/gems
export GEM_PATH           = $(GEM_HOME):$(DESTDIR)/opt/ood/gems:$(shell printenv GEM_PATH)
export APACHE_DIR         = "$(DESTDIR)/var/www/ood"
export APACHE_CONF_DIR    = "$(DESTDIR)/etc/apache2"
export CONFIG_DIR         = "$(DESTDIR)/etc/ood/config"
export ARCH               = $(shell uname -m)

# Left as example of how to do dynamic dependencies
# control would need: ${nodejs:Depends} for install dependencies
#ifeq ($(ARCH),ppc64le)
# 	SUBSTVARS = -Vnodejs:Depends="nodejs"
#else
#	SUBSTVARS = -Vnodejs:Depends="nodejs (>= 14.0), nodejs (<< 15.0)"
#	ifeq (,$(findstring $(shell nodejs --version),v14))
#		@echo "Requires NodeJS 14"
#		exit 1
#	endif
#endif

%:
	dh $@

override_dh_gencontrol:
	dh_gencontrol -- $(SUBSTVARS)

override_dh_auto_configure:
	# nothing to configure

override_dh_auto_build:
ifeq ($(ARCH),ppc64le)
	bundle config set --global force_ruby_platform true
	bundle config --global build.nokogiri --use-system-libraries
endif
	BUNDLE_WITHOUT='doc test package development' bundle install
	rake --trace -mj$(NCPUS) build
	rm -rf $(GEM_HOME)/cache
	rm -rf apps/*/node_modules/.cache

override_dh_auto_install:
	env
	rake --trace install

	# install gems
	mkdir -p $(DESTDIR)/opt/ood/gems
	mv $(GEM_HOME)/* $(DESTDIR)/opt/ood/gems

	# make some directories
	mkdir -p "$(APACHE_DIR)/public/maintenance"
	mkdir -p "$(APACHE_DIR)/discover"
	mkdir -p "$(APACHE_DIR)/register"
	mkdir -p "$(APACHE_DIR)/apps/sys"
	mkdir -p "$(APACHE_DIR)/apps/usr"
	mkdir -p "$(APACHE_DIR)/apps/dev"
	mkdir -p "$(CONFIG_DIR)/clusters.d"
	mkdir -p "$(CONFIG_DIR)/ondemand.d"
	mkdir -p "$(APACHE_CONF_DIR)/sites-available"
	mkdir -p "$(APACHE_CONF_DIR)/sites-enabled"

	mv $(DESTDIR)/opt/ood/apps/* $(APACHE_DIR)/apps/sys
	rm -rf $(DESTDIR)/opt/ood/apps
	# Avoid x86 compiled fixtures on non-x86
	rm -rf $(APACHE_DIR)/apps/sys/dashboard/test

	# ood config files
	rake package:version > $(DESTDIR)/opt/ood/VERSION
	install -m 644 nginx_stage/share/nginx_stage_example.yml $(CONFIG_DIR)/nginx_stage.yml
	install -m 640 ood-portal-generator/share/ood_portal_example.yml $(CONFIG_DIR)/ood_portal.yml
	install -m 644 ood-portal-generator/share/maintenance.html $(APACHE_DIR)/public/maintenance/index.html
	install -m 644 ood-portal-generator/share/need_auth.html $(APACHE_DIR)/public/need_auth.html
	install -m 644 hooks/hook.env.example $(CONFIG_DIR)/hook.env
	mkdir -p $(DESTDIR)/opt/ood/ondemand
	install -m 644 packaging/files/enable.deb $(DESTDIR)/opt/ood/ondemand/enable

	$(DESTDIR)/opt/ood/ood-portal-generator/sbin/update_ood_portal
	cd $(APACHE_CONF_DIR)/sites-enabled && ln -sf ../sites-available/ood-portal.conf ./ood-portal.conf
	sed -i 's|$(DESTDIR)||g' $(CONFIG_DIR)/ood_portal.sha256sum

	mkdir -p $(DESTDIR)/var/tmp/ondemand-nginx
	mkdir -p $(DESTDIR)/var/run/ondemand-nginx
	mkdir -p $(DESTDIR)/var/lib/ondemand-nginx/config/puns
	mkdir -p $(DESTDIR)/var/lib/ondemand-nginx/config/apps/sys
	mkdir -p $(DESTDIR)/var/lib/ondemand-nginx/config/apps/usr
	mkdir -p $(DESTDIR)/var/lib/ondemand-nginx/config/apps/dev

override_dh_strip:
	# Do not strip debug symbols

override_dh_builddeb:
	dh_builddeb -- -Zgzip

override_dh_fixperms:
	dh_fixperms
	chmod 700 $(APACHE_DIR)/apps/sys/projects
