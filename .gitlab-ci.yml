before_script:
  - docker info
  - '[ -d tmp ] || mkdir tmp'
  - MAJOR_VERSION=$(echo "${CI_COMMIT_TAG#v}" | cut -d'.' -f1)
  - MINOR_VERSION=$(echo "${CI_COMMIT_TAG#v}" | cut -d'.' -f2)
  - '[ "x$CI_COMMIT_TAG" != "x" ] && RELEASE="${MAJOR_VERSION}.${MINOR_VERSION}" || RELEASE=master'
  - git clone --single-branch --branch $RELEASE https://github.com/OSC/ondemand-packaging.git tmp/ondemand-packaging
  - cp /systems/osc_certs/gpg/ondemand/.gpgpass $CI_PROJECT_DIR/tmp/ondemand-packaging/
  - cp /systems/osc_certs/gpg/ondemand/ondemand.sec $CI_PROJECT_DIR/tmp/ondemand-packaging/
  - bundle install --path vendor/bundle --without test
stages:
  - build
  - deploy

variables:
  GIT_STRATEGY: clone
  GIT_DEPTH: 0

rpm-build-nightly-el7:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - bundle exec rake package:rpm:nightly[el7,'-u -v -C']
  artifacts:
    paths:
      - dist
    name: "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"

rpm-build-nightly-el8:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - bundle exec rake package:rpm:nightly[el8,'-u -v -C']
  artifacts:
    paths:
      - dist
    name: "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"

rpm-build-el7:
  stage: build
  only:
    - tags
  script:
    - bundle exec rake package:rpm[el7,'-u -v -C']
  artifacts:
    paths:
      - dist
    name: "$CI_PROJECT_NAME-$CI_COMMIT_TAG"

rpm-build-el8:
  stage: build
  only:
    - tags
  script:
    - bundle exec rake package:rpm[el8,'-u -v -C']
  artifacts:
    paths:
      - dist
    name: "$CI_PROJECT_NAME-$CI_COMMIT_TAG"

rpm-deploy-nightly:
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - ./tmp/ondemand-packaging/release.py --debug --pkey /systems/osc_certs/ssh/ondemand-packaging/id_rsa -c nightly ./dist/*

rpm-deploy-build:
  stage: deploy
  only:
    - tags
  script:
    - ./tmp/ondemand-packaging/release.py --debug --pkey /systems/osc_certs/ssh/ondemand-packaging/id_rsa -c build -r $CI_COMMIT_TAG ./dist/*

rpm-deploy:
  stage: deploy
  only:
    - tags
  script:
    - ./tmp/ondemand-packaging/release.py --debug --pkey /systems/osc_certs/ssh/ondemand-packaging/id_rsa -c main ./dist/*
