<%-
  max_sessions = 3
  poll_delay = ENV["POLL_DELAY"] || 10000
  active_sessions = BatchConnect::Session.all.reject { |s| s.completed? }
  session_selection = active_sessions.first(max_sessions)
-%>

<%- unless session_selection.empty? %>
  <%- content_for :head do -%>
    <%= javascript_include_tag 'batch_connect_sessions', nonce: true %>
  <%- end -%>

  <div class="active-sessions-header">
    <h3>
      <%= t('dashboard.active_sessions_title') %>
      <small><%= t('dashboard.active_sessions_caption_html', all_sessions_url: batch_connect_sessions_path, number_of_sessions: active_sessions.length) %></small>
    </h3>
  </div>

  <div class="active-sessions-content">
    <div id="batch_connect_sessions" class="row" data-toggle="poll" data-url="<%= batch_connect_sessions_path(format: :js) %>" data-delay="<%= poll_delay %>">
      <div class="col-md-12">
        <%= render partial: "/batch_connect/sessions/panel", collection: session_selection, as: :session %>
      </div>
    </div>
  </div>
<% end %>