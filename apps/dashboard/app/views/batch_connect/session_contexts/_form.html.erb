<%= bootstrap_form_for(@session_context) do |f| %>
  <% f.object.each do |attrib| %>
    <%= create_widget(f, attrib, format: @render_format) %>
  <% end %>

  <%= f.submit t('dashboard.batch_connect_form_launch'), class: "btn btn-primary btn-block" %>
<% end %>

<%= javascript_tag do %>
(function(){
	'use strict'

	/**
	 * Toggle the visibilty of a form group
	 */
	function toggle_visibilty_of_elements() {
	  /* array of controlled elements */
      let controlled_form_groups = Array.from(document.querySelectorAll('.form-group[data-ood-show-for]'));

      /* array of active scopes' values */
      let enabled_scopes_values = Array.from(document.querySelectorAll('option[data-ood-show-scope]:checked, input[data-ood-show-scope]:checked').values()).map(x => x.dataset.oodShowScope);


      controlled_form_groups.forEach(el => update_form_group_visibility(el, enabled_scopes_values.includes(el.dataset.oodShowFor)));
	}

	/*
    * Updates the visibility of controlled a form group
    */
    function update_form_group_visibility(e1, visible) {
      let input_element = $(e1).find(":input");
      visible ? $( e1 ).show() && input_element.prop( "disabled", false ) : $( e1 ).hide() && input_element.prop( "disabled", true );
    }

	/**
 	* Sets the change handler for scopes
 	*/
	function set_change_handler() {
	  let enabled_scopes = $('select:has(option[data-show-scope-show]), input[data-show-scope-show]').change(toggle_visibilty_of_form_group);
	}

	toggle_visibilty_of_form_group();
	set_change_handler();

}());
<% end %>


<% @app.custom_javascript_files.each do |jsfile| %>
  <%= javascript_tag "(function(){\n" + jsfile.read + "\n}());" %>
<% end %>
