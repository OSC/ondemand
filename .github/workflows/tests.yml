name: Tests

on:
  push:
    branches: [master]
  pull_request:
  schedule:
    - cron: "0 2 * * *"

env:
  ACTIONS_STEP_DEBUG: true
  ACTIONS_RUNNER_DEBUG: true

jobs:
  e2e-tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        dist:
          - el8
        arch:
          - x86_64
        version: ["4.0"]
    runs-on: ${{ matrix.os }}
    name: E2E test ${{ matrix.dist }}-${{ matrix.arch }}

    steps:
      - name: Checkout ${{ github.sha	}}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Ruby using Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler: "2.5.23"
          bundler-cache: true

      - name: Build package
        if: matrix.arch == 'x86_64'
        run: |
          # have to use docker for el8 packaging.
          if [[ "${{ matrix.dist }}" == "el8" ]]; then
            unset CONTAINER_RT
          fi
          bundle exec rake package:build[${{ matrix.dist }},${{ matrix.arch }}]
        timeout-minutes: 10
        env:
          VERSION: "${{ matrix.version }}.0"
          OOD_PACKAGING_DEBUG: "true"
          CONTAINER_RT: "podman"

      - name: Run package tests
        if: matrix.arch == 'x86_64'
        run: bundle exec rake test:e2e
        env:
          BEAKER_set: ${{ matrix.dist }}
          OOD_BUILD_REPO: ${{ matrix.version }}

      - name: arch distro
        if: ${{ matrix.arch != 'x86_64' && github.event_name == 'schedule' }}
        run: |
          DISTRO=$(echo "${{ matrix.os }}" | sed 's|\-||g')
          echo "DISTRO=${DISTRO}" >> $GITHUB_ENV
          if [ "${{ matrix.arch }}" == "aarch64" ]; then
            echo "PLATFORM=linux/arm64" >> $GITHUB_ENV
          fi
          if [ "${{ matrix.arch }}" == "ppc64le" ]; then
            echo "PLATFORM=linux/ppc64le" >> $GITHUB_ENV
          fi

      - name: Test OnDemand
        if: ${{ matrix.arch != 'x86_64' && github.event_name == 'schedule' }}
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ env.DISTRO }}
          githubToken: ${{ github.token }}
          install: |
            apt update -y
            apt install -y ruby-bundler ruby-dev build-essential git \
              apt-transport-https ca-certificates curl software-properties-common
            # Not available for ppc64le
            # apt install -y chromium-chromedriver
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
            apt update -y
            apt install -y docker-ce
          dockerRunArgs: |
            --platform ${{ env.PLATFORM }}
          run: |
            git config --global --add safe.directory $GITHUB_WORKSPACE
            bundle install
            bundle exec rake package:build[${{ matrix.dist }},${{ matrix.arch }}]
            # e2e tests fail with issues accessing chorium
            # bundle exec rake test:e2e
          env: |
            VERSION: "${{ matrix.version }}.0"
            OOD_PACKAGING_DEBUG: 'true'
            BEAKER_set: ${{ matrix.dist }}-${{ matrix.arch }}
            OOD_BUILD_REPO: ${{ matrix.version }}
            DOCKER_IN_DOCKER: 'true'

      - name: Debug failure
        if: failure()
        run: |
          find tmp/e2e_ctr/ -type f -name *.log -exec cat {} +
